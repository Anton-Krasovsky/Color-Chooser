kotlin version: 2.2.20
error message: java.lang.RuntimeException: Exception while generating code for:
FUN name:ColorChooserScreen visibility:public modality:FINAL returnType:kotlin.Unit
  VALUE_PARAMETER kind:Regular name:viewModel index:0 type:com.krasouski.presentation.ColorChooserViewModel
  annotations:
    Composable
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:selectedColor$delegate type:androidx.compose.runtime.State<com.krasouski.domain.ColorType> [val]
      TYPE_OP type=androidx.compose.runtime.State<com.krasouski.domain.ColorType> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<com.krasouski.domain.ColorType>
        CALL 'public final fun collectAsState$default <T> (<this>: kotlinx.coroutines.flow.StateFlow<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default>, context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          TYPE_ARG T: com.krasouski.domain.ColorType
          ARG <this>: CALL 'public final fun <get-selectedColor> (): kotlinx.coroutines.flow.StateFlow<com.krasouski.domain.ColorType> declared in com.krasouski.presentation.ColorChooserViewModel' type=kotlinx.coroutines.flow.StateFlow<com.krasouski.domain.ColorType> origin=GET_PROPERTY
            ARG <this>: GET_VAR 'viewModel: com.krasouski.presentation.ColorChooserViewModel declared in com.krasouski.presentation.ColorChooserScreenKt.ColorChooserScreen' type=com.krasouski.presentation.ColorChooserViewModel origin=null
          ARG context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          ARG $mask0: CONST Int type=kotlin.Int value=1
          ARG $handler: CONST Null type=kotlin.Any? value=null
    CALL 'public final fun Column (modifier: androidx.compose.ui.Modifier, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=null
      ARG modifier: CALL 'public final fun padding-3ABfNKs ($this$padding: androidx.compose.ui.Modifier, $v$c$androidx-compose-ui-unit-Dp$-all$0: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=null
        ARG $this$padding: CALL 'public final fun fillMaxSize$default (<this>: androidx.compose.ui.Modifier, fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
          ARG fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          ARG $mask0: CONST Int type=kotlin.Int value=1
          ARG $handler: CONST Null type=kotlin.Any? value=null
        ARG $v$c$androidx-compose-ui-unit-Dp$-all$0: CALL 'public final fun <get-dp> (<this>: kotlin.Int): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          ARG <this>: CONST Int type=kotlin.Int value=32
      ARG verticalArrangement: CALL 'public final fun <get-Center> (): androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical origin=GET_PROPERTY
        ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.foundation.layout.Arrangement visibility:public [final,static] declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement origin=null
      ARG horizontalAlignment: CALL 'public final fun <get-CenterHorizontally> (): androidx.compose.ui.Alignment.Horizontal declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment.Horizontal origin=GET_PROPERTY
        ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static] declared in androidx.compose.ui.Alignment' type=androidx.compose.ui.Alignment.Companion origin=null
      ARG content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun ColorChooserScreen$lambda$1 ($this$Column: androidx.compose.foundation.layout.ColumnScope, $selectedColor$delegate: androidx.compose.runtime.State<com.krasouski.domain.ColorType>, $viewModel: com.krasouski.presentation.ColorChooserViewModel): kotlin.Unit declared in com.krasouski.presentation.ColorChooserScreenKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          ARG $selectedColor$delegate: GET_VAR 'val selectedColor$delegate: androidx.compose.runtime.State<com.krasouski.domain.ColorType> [val] declared in com.krasouski.presentation.ColorChooserScreenKt.ColorChooserScreen' type=androidx.compose.runtime.State<com.krasouski.domain.ColorType> origin=null
          ARG $viewModel: GET_VAR 'viewModel: com.krasouski.presentation.ColorChooserViewModel declared in com.krasouski.presentation.ColorChooserScreenKt.ColorChooserScreen' type=com.krasouski.presentation.ColorChooserViewModel origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:53)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:46)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:422)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:439)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:164)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile(JvmIrCodegenFactory.kt:446)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:413)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:425)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:89)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:27)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:102)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:22)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:53)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:109)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:68)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:79)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:45)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:90)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:352)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:176)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:39)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:499)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:416)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$0$compile(IncrementalCompilerRunner.kt:249)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:119)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:684)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:94)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1810)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN INLINE_LAMBDA name:ColorChooserScreen$lambda$1 visibility:private modality:FINAL returnType:kotlin.Unit
  VALUE_PARAMETER kind:ExtensionReceiver name:$this$Column index:0 type:androidx.compose.foundation.layout.ColumnScope
  VALUE_PARAMETER BOUND_VALUE_PARAMETER kind:Regular name:$selectedColor$delegate index:1 type:androidx.compose.runtime.State<com.krasouski.domain.ColorType>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER kind:Regular name:$viewModel index:2 type:com.krasouski.presentation.ColorChooserViewModel
  BLOCK_BODY
    VAR name:$i$a$-Column-ColorChooserScreenKt$ColorChooserScreen$1 type:kotlin.Int [val]
      CONST Int type=kotlin.Int value=0
    CALL 'public final fun Row$default (modifier: androidx.compose.ui.Modifier?, horizontalArrangement: androidx.compose.foundation.layout.Arrangement.Horizontal?, verticalAlignment: androidx.compose.ui.Alignment.Vertical?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.RowKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      ARG modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Modifier? value=null
      ARG horizontalArrangement: CALL 'public final fun spacedBy-0680j_4 ($v$c$androidx-compose-ui-unit-Dp$-space$0: androidx.compose.ui.unit.Dp): androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical origin=null
        ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.foundation.layout.Arrangement visibility:public [final,static] declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement origin=null
        ARG $v$c$androidx-compose-ui-unit-Dp$-space$0: CALL 'public final fun <get-dp> (<this>: kotlin.Int): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          ARG <this>: CONST Int type=kotlin.Int value=24
      ARG verticalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Vertical? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment.Vertical? value=null
      ARG content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun ColorChooserScreen$lambda$1$0 ($this$Row: androidx.compose.foundation.layout.RowScope, $selectedColor$delegate: androidx.compose.runtime.State<com.krasouski.domain.ColorType>, $viewModel: com.krasouski.presentation.ColorChooserViewModel): kotlin.Unit declared in com.krasouski.presentation.ColorChooserScreenKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          ARG $selectedColor$delegate: GET_VAR '$selectedColor$delegate: androidx.compose.runtime.State<com.krasouski.domain.ColorType> declared in com.krasouski.presentation.ColorChooserScreenKt.ColorChooserScreen$lambda$1' type=androidx.compose.runtime.State<com.krasouski.domain.ColorType> origin=null
          ARG $viewModel: GET_VAR '$viewModel: com.krasouski.presentation.ColorChooserViewModel declared in com.krasouski.presentation.ColorChooserScreenKt.ColorChooserScreen$lambda$1' type=com.krasouski.presentation.ColorChooserViewModel origin=null
      ARG $mask0: CONST Int type=kotlin.Int value=5
      ARG $handler: CONST Null type=kotlin.Any? value=null
    CALL 'public final fun Spacer (modifier: androidx.compose.ui.Modifier): kotlin.Unit declared in androidx.compose.foundation.layout.SpacerKt' type=kotlin.Unit origin=null
      ARG modifier: CALL 'public final fun height-3ABfNKs ($this$height: androidx.compose.ui.Modifier, $v$c$androidx-compose-ui-unit-Dp$-height$0: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=null
        ARG $this$height: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
        ARG $v$c$androidx-compose-ui-unit-Dp$-height$0: CALL 'public final fun <get-dp> (<this>: kotlin.Int): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          ARG <this>: CONST Int type=kotlin.Int value=32
    VAR name:textColor type:androidx.compose.ui.graphics.Color [val]
      CALL 'public final fun getOnSurface-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.material3.ColorScheme' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
        ARG <this>: CALL 'public final fun <get-colorScheme> (): androidx.compose.material3.ColorScheme declared in androidx.compose.material3.MaterialTheme' type=androidx.compose.material3.ColorScheme origin=GET_PROPERTY
          ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.material3.MaterialTheme visibility:public [final,static] declared in androidx.compose.material3.MaterialTheme' type=androidx.compose.material3.MaterialTheme origin=null
    CALL 'public final fun Text-80ic1_w$default (text: kotlin.String, modifier: androidx.compose.ui.Modifier?, $v$c$androidx-compose-ui-graphics-Color$-color$0: androidx.compose.ui.graphics.Color, $v$c$androidx-compose-ui-unit-TextUnit$-fontSize$0: androidx.compose.ui.unit.TextUnit, fontStyle: androidx.compose.ui.text.font.FontStyle?, fontWeight: androidx.compose.ui.text.font.FontWeight?, fontFamily: androidx.compose.ui.text.font.FontFamily?, $v$c$androidx-compose-ui-unit-TextUnit$-letterSpacing$0: androidx.compose.ui.unit.TextUnit, textDecoration: androidx.compose.ui.text.style.TextDecoration?, textAlign: androidx.compose.ui.text.style.TextAlign?, $v$c$androidx-compose-ui-unit-TextUnit$-lineHeight$0: androidx.compose.ui.unit.TextUnit, $v$c$androidx-compose-ui-text-style-TextOverflow$-overflow$0: androidx.compose.ui.text.style.TextOverflow, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.TextKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      ARG text: STRING_CONCATENATION type=kotlin.String
        CONST String type=kotlin.String value="Your color is "
        WHEN type=kotlin.String origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              ARG arg0: CALL 'private final fun ColorChooserScreen$lambda$0 ($selectedColor$delegate: androidx.compose.runtime.State<com.krasouski.domain.ColorType>): com.krasouski.domain.ColorType declared in com.krasouski.presentation.ColorChooserScreenKt' type=com.krasouski.domain.ColorType origin=GET_LOCAL_PROPERTY
                ARG $selectedColor$delegate: GET_VAR '$selectedColor$delegate: androidx.compose.runtime.State<com.krasouski.domain.ColorType> declared in com.krasouski.presentation.ColorChooserScreenKt.ColorChooserScreen$lambda$1' type=androidx.compose.runtime.State<com.krasouski.domain.ColorType> origin=null
              ARG arg1: GET_FIELD 'FIELD FIELD_FOR_ENUM_ENTRY name:NONE type:com.krasouski.domain.ColorType visibility:public [final,static] declared in com.krasouski.domain.ColorType' type=com.krasouski.domain.ColorType origin=null
            then: CONST String type=kotlin.String value="None"
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CALL 'public final fun <get-displayName> (): kotlin.String declared in com.krasouski.domain.ColorType' type=kotlin.String origin=GET_PROPERTY
              ARG <this>: CALL 'private final fun ColorChooserScreen$lambda$0 ($selectedColor$delegate: androidx.compose.runtime.State<com.krasouski.domain.ColorType>): com.krasouski.domain.ColorType declared in com.krasouski.presentation.ColorChooserScreenKt' type=com.krasouski.domain.ColorType origin=GET_LOCAL_PROPERTY
                ARG $selectedColor$delegate: GET_VAR '$selectedColor$delegate: androidx.compose.runtime.State<com.krasouski.domain.ColorType> declared in com.krasouski.presentation.ColorChooserScreenKt.ColorChooserScreen$lambda$1' type=androidx.compose.runtime.State<com.krasouski.domain.ColorType> origin=null
      ARG modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Modifier? value=null
      ARG $v$c$androidx-compose-ui-graphics-Color$-color$0: GET_VAR 'val textColor: androidx.compose.ui.graphics.Color [val] declared in com.krasouski.presentation.ColorChooserScreenKt.ColorChooserScreen$lambda$1' type=androidx.compose.ui.graphics.Color origin=null
      ARG $v$c$androidx-compose-ui-unit-TextUnit$-fontSize$0: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
        CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
          TYPE_ARG T: kotlin.Long
          TYPE_ARG R: androidx.compose.ui.unit.TextUnit
          ARG v: CONST Long type=kotlin.Long value=0
      ARG fontStyle: COMPOSITE type=androidx.compose.ui.text.font.FontStyle? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.text.font.FontStyle? value=null
      ARG fontWeight: COMPOSITE type=androidx.compose.ui.text.font.FontWeight? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.text.font.FontWeight? value=null
      ARG fontFamily: COMPOSITE type=androidx.compose.ui.text.font.FontFamily? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.text.font.FontFamily? value=null
      ARG $v$c$androidx-compose-ui-unit-TextUnit$-letterSpacing$0: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
        CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
          TYPE_ARG T: kotlin.Long
          TYPE_ARG R: androidx.compose.ui.unit.TextUnit
          ARG v: CONST Long type=kotlin.Long value=0
      ARG textDecoration: COMPOSITE type=androidx.compose.ui.text.style.TextDecoration? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.text.style.TextDecoration? value=null
      ARG textAlign: COMPOSITE type=androidx.compose.ui.text.style.TextAlign? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.text.style.TextAlign? value=null
      ARG $v$c$androidx-compose-ui-unit-TextUnit$-lineHeight$0: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
        CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
          TYPE_ARG T: kotlin.Long
          TYPE_ARG R: androidx.compose.ui.unit.TextUnit
          ARG v: CONST Long type=kotlin.Long value=0
      ARG $v$c$androidx-compose-ui-text-style-TextOverflow$-overflow$0: COMPOSITE type=androidx.compose.ui.text.style.TextOverflow origin=DEFAULT_VALUE
        CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.text.style.TextOverflow origin=null
          TYPE_ARG T: kotlin.Int
          TYPE_ARG R: androidx.compose.ui.text.style.TextOverflow
          ARG v: CONST Int type=kotlin.Int value=0
      ARG softWrap: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      ARG maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
        CONST Int type=kotlin.Int value=0
      ARG minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
        CONST Int type=kotlin.Int value=0
      ARG onTextLayout: COMPOSITE type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=DEFAULT_VALUE
        CONST Null type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? value=null
      ARG style: CALL 'public final fun <get-headlineSmall> (): androidx.compose.ui.text.TextStyle declared in androidx.compose.material3.Typography' type=androidx.compose.ui.text.TextStyle origin=GET_PROPERTY
        ARG <this>: CALL 'public final fun <get-typography> (): androidx.compose.material3.Typography declared in androidx.compose.material3.MaterialTheme' type=androidx.compose.material3.Typography origin=GET_PROPERTY
          ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.material3.MaterialTheme visibility:public [final,static] declared in androidx.compose.material3.MaterialTheme' type=androidx.compose.material3.MaterialTheme origin=null
      ARG $mask0: CONST Int type=kotlin.Int value=65530
      ARG $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:53)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.generateLambdaBody(IrSourceCompilerForInline.kt:72)
	at org.jetbrains.kotlin.codegen.inline.ExpressionLambda.generateLambdaBody(LambdaInfo.kt:72)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genValueAndPut(IrInlineCodegen.kt:122)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:567)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:580)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:530)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:535)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:232)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Row$default (modifier: androidx.compose.ui.Modifier?, horizontalArrangement: androidx.compose.foundation.layout.Arrangement.Horizontal?, verticalAlignment: androidx.compose.ui.Alignment.Vertical?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.RowKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:82)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:589)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:530)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:535)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:232)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	... 59 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/foundation/layout/RowKt;.Row$default(Landroidx/compose/ui/Modifier;Landroidx/compose/foundation/layout/Arrangement$Horizontal;Landroidx/compose/ui/Alignment$Vertical;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction$lambda$0(SourceCompilerForInline.kt:98)
	at org.jetbrains.kotlin.codegen.inline.InlineCache.computeMethodBytes(InlineCache.kt:90)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:93)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:65)
	... 70 more


